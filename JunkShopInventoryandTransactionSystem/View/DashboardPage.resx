<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>